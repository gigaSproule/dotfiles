name: 'Run main workflow'

on:
  pull_request:
  push:
    branches:
      - "master"
    tags:
      - "*"

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  check-formatting:
    runs-on: "ubuntu-latest"
    if: github.ref_type != 'tags'
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup rust
        uses: ./.github/actions/setup-rust
      - name: Configure Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Run formatting check
        run: cargo fmt --all -- --check
  lint:
    runs-on: "ubuntu-latest"
    if: github.ref_type != 'tags'
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup rust
        uses: ./.github/actions/setup-rust
      - name: Configure Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Run lint
        run: cargo clippy --all-features --all-targets
  test-linux:
    runs-on: "ubuntu-latest"
    if: github.ref_type != 'tags'
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Run tests
        uses: ./.github/actions/setup-rust
      - name: Configure Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test
  test-windows:
    runs-on: "windows-latest"
    if: github.ref_type != 'tags'
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup rust
        uses: ./.github/actions/setup-rust
      - name: Configure Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test
  test-macos:
    runs-on: "macos-latest"
    if: github.ref_type != 'tags'
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup rust
        uses: ./.github/actions/setup-rust
      - name: Configure Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test
  build-linux:
    runs-on: "ubuntu-latest"
    if: github.event_name != 'pull_request' && !failure()
    needs:
      - test-linux
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup rust
        uses: ./.github/actions/setup-rust
      - name: Configure Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Run build
        run: cargo build --release
      - name: Rename binary
        run: mv target/release/dotfiles target/release/dotfiles-linux
      - name: Temporarily save linux binary
        uses: actions/upload-artifact@v3
        with:
          name: dotfiles-linux
          path: target/release/dotfiles-linux
          retention-days: 1
  build-windows:
    runs-on: "windows-latest"
    if: github.event_name != 'pull_request' && !failure()
    needs:
      - test-windows
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup rust
        uses: ./.github/actions/setup-rust
      - name: Configure Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Run build
        run: cargo build --release
      - name: Rename binary
        run: mv target\release\dotfiles.exe target\release\dotfiles-windows.exe
      - name: Temporarily save windows binary
        uses: actions/upload-artifact@v3
        with:
          name: dotfiles-windows
          path: target\release\dotfiles-windows.exe
          retention-days: 1
  build-macos:
    runs-on: "macos-latest"
    if: github.event_name != 'pull_request' && !failure()
    needs:
      - test-macos
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup rust
        uses: ./.github/actions/setup-rust
      - name: Configure Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Run build
        run: cargo build --release
      - name: Rename binary
        run: mv target/release/dotfiles target/release/dotfiles-macos
      - name: Temporarily save mac os binary
        uses: actions/upload-artifact@v3
        with:
          name: dotfiles-macos
          path: target/release/dotfiles-macos
          retention-days: 1
  release:
    runs-on: "ubuntu-latest"
    if: github.ref_type == 'tags'
    needs:
      - build-linux
      - build-windows
      - build-macos
    steps:
      - name: Retrieve saved linux binary
        uses: actions/download-artifact@v4
        with:
          name: dotfiles-linux
      - name: Retrieve saved windows binary
        uses: actions/download-artifact@v4
        with:
          name: dotfiles-windows
      - name: Retrieve saved mac os binary
        uses: actions/download-artifact@v4
        with:
          name: dotfiles-macos
      - name: Create Release
        uses: ncipollo/release-action@v1.13.0
        with:
          artifacts: target/release/*
          generateReleaseNotes: true
          makeLatest: true

